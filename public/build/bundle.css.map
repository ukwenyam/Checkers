{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { Position } from './Scripts/Position.js';\n\timport { Board } from './Scripts/Board.js';\n\timport { spring } from 'svelte/motion';\n\timport { writable } from 'svelte/store';\n\n\tlet currPlayer = Math.floor(Math.random() * 2);\n\n\tlet currPos = null, nextPos = null;\n\n\tlet timer = 10, lockedPiece = false;\n\n\tlet screenWidth = screen.width;\n\n\tlet numMoves = 0, rangeMoves = 0;\n\n\tlet size;\n\n\tlet gameBoard = new Board();\n\n\tlet gameHistory = [];\n\n\tconst cirPos = spring([]);\n\n\tlet squares = [0, 1, 2, 3, 4, 5, 6, 7];\n\n\tlet squareSize, boardHeight, factor;\n\n\tif(screen.width <= 800) {\n\t\tfactor = 800 / (screen.width - 12.5); \n\t\tsquareSize = Math.floor((screen.width - 10) / 8);\n\n\t\tif(screen.width >= 500)\n\t\t\tsize = spring(25);\n\t\telse\n\t\t\tsize = spring(12.5);\n\n\t\tboardHeight = squareSize * 8;\n\t} else {\n\t\tfactor = 1;\n\t\tsize = spring(30);\n\t\tsquareSize = 100;\n\t\tboardHeight = squareSize * 8;\n\t}\n\n\tdocument.documentElement.style.setProperty('--board-height', boardHeight + 'px');\n\n\tsaveBoardState();\n\n\tsetCirclePositions();\n\n\tsetInterval(function() {\n\t\tif(currPos != null)\n\t\t\thighlightCircle(currPos);\n\t}, 100);\n\n\tsetInterval(function() {\n\t\tif(rangeMoves == numMoves) {\n\t\t\ttimer--;\n\n\t\t\tif(timer == 0) \n\t\t\t\tswitchPlayer();\n\n\t\t\tif(timer == -1)\n\t\t\t\ttimer = 10;\n\t\t}\n\t}, 1000);\n\t\n\t\t\n\tfunction updateCirclePositions(nextPos) {\n\n\t\tlet i = nextPos.xPos, j = nextPos.yPos;\n\n\t\tlet id = gameBoard.getId(i, j);\n\n\t\tcirPos.update(state => {\n\t\t\tstate[id].x = (i + i + 1) * (50 / factor);  \n\t\t\tstate[id].y = (j + j + 1) * (50 / factor); \n\t\t\treturn state;\n\t\t});\n\t}\n\n\tfunction setCirclePositions() {\n\n\t\tfor(let i = 0; i < 8; i++) {\n\t\t\t\n\t\t\tfor(let j = 0; j < 8; j++) {\n\n\t\t\t\tif(!gameBoard.isEmpty(i, j)) {\n\n\t\t\t\t\tlet id = gameBoard.getId(i, j);\n\n\t\t\t\t\tcirPos.update(state => {\n\t\t\t\t\t\tstate[id] = {};\n\t\t\t\t\t\tstate[id].x = (i + i + 1) * (50 / factor);  \n\t\t\t\t\t\tstate[id].y = (j + j + 1) * (50 / factor); \n\t\t\t\t\t\tstate[id].s = gameBoard.getSide(i, j) == \"U\" ? 0 : 1;\n\t\t\t\t\t\treturn state; \n\t\t\t\t\t});\n\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setCurrPos(i, j, evt) {\n\t\t//console.log(i + \", \" + j);\n\n\t\tif($cirPos[gameBoard.getId(i, j)].s == currPlayer && lockedPiece == false && rangeMoves == numMoves) {\n\n\t\t\tlet litCircle = document.getElementById(gameBoard.getId(i,j));\n\n\t\t\tlet allCircles, index;\n\n\t\t\tif(gameBoard.getSide(i,j) == \"U\") {\n\t\t\t\tallCircles = document.getElementsByClassName(\"checkBlack\");\n\n\t\t\t\tfor (index = 0; index < allCircles.length; ++index) \n\t\t\t\t\tallCircles[index].setAttribute(\"style\", \"fill:black\");\n\t\t\t\t\n\t\t\t\tlitCircle.setAttribute(\"style\", \"fill:grey\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tallCircles = document.getElementsByClassName(\"checkRed\");\n\n\t\t\t\tfor (index = 0; index < allCircles.length; ++index) \n\t\t\t\t\tallCircles[index].setAttribute(\"style\", \"fill:red\");\n\n\t\t\t\tlitCircle.setAttribute(\"style\", \"fill:pink\");\n\t\t\t}\n\n\t\t\tlet newtarget = evt.target || event.target;\n\t\t\tlet topmost = document.getElementById(\"use\");\n\t\t\ttopmost.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\",\"#\" + newtarget.id);\n\t\t\tcurrPos = gameBoard.getPiece(i, j);\n\t\t}\n\t\t\t\n\t\t//let pos = currPos.getPosition();\n\n\t\t//console.log(pos.xPos + \", \" + pos.yPos);\n\t}\n\n\tfunction setNextPos(i, j) {\n\t\t\n\t\tif(gameBoard.isEmpty(i, j) && currPos != null && rangeMoves == numMoves) {\n\n\t\t\tnextPos = new Position(i, j, 'E');\n\n\t\t\tlet move = gameBoard.doMove(currPos, nextPos);\n\n\t\t\tgameBoard = gameBoard;\n\n\t\t\t//console.log(gameBoard);\n\n\t\t\tif(move) {\n\t\t\t\tlockedPiece = true;\n\n\t\t\t\tupdateCirclePositions(nextPos);\n\n\t\t\t\tsaveBoardState();\n\n\t\t\t\tnumMoves++; rangeMoves++;\n\n\t\t\t\tcurrPos = gameBoard.getPiece(nextPos.xPos, nextPos.yPos);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction viewBoardHistory() {\n\n\t\tgameBoard = new Board(gameHistory[rangeMoves]);\n\n\t\tsetCirclePositions();\n\t}\n\n\tfunction highlightCircle(currPos) {\n\n\t\tlet i = currPos.getPosition().xPos, j = currPos.getPosition().yPos;\n\n\t\tlet litCircle = document.getElementById(gameBoard.getId(i, j));\n\n\t\tif(gameBoard.getSide(i,j) == \"U\") \n\t\t\tlitCircle.setAttribute(\"style\", \"fill:grey\");\n\t\telse \n\t\t\tlitCircle.setAttribute(\"style\", \"fill:pink\");\n\t}\n\n\tfunction switchPlayer() {\n\n\t\tlet allCircles, index;\n\n\t\tif(currPlayer == 0) {\n\n\t\t\tallCircles = document.getElementsByClassName(\"checkBlack\");\n\n\t\t\tfor (index = 0; index < allCircles.length; ++index) \n\t\t\t\tallCircles[index].setAttribute(\"style\", \"fill:black\");\n\n\t\t} else {\n\n\t\t\tallCircles = document.getElementsByClassName(\"checkRed\");\n\n\t\t\tfor (index = 0; index < allCircles.length; ++index) \n\t\t\t\tallCircles[index].setAttribute(\"style\", \"fill:red\");\n\n\t\t}\n\n\t\tcurrPlayer = currPlayer == 0 ? 1 : 0;\n\t\tcurrPos = null, nextPos = null;\n\t\tlockedPiece = false;\n\t}\n\n\tfunction saveBoardState() {\n\n\t\tlet state = [];\n\t\tlet i, j;\n\n\t\tfor(i = 0; i < 8; i++) {\n\t\t\tstate[i] = [];\n\t\t\tfor(j = 0; j < 8; j++) {\n\t\t\t\tif(!gameBoard.isEmpty(i, j))\n\t\t\t\t\tstate[i][j] = gameBoard.getPiece(i, j);\n\t\t\t\telse\n\t\t\t\t\tstate[i][j] = null;\n\t\t\t}\n\t\t}\n\n\t\tgameHistory.push(state);\n\t}\n</script>\n\n<h2 id=\"player\">Current Player:</h2>\n\n{#if currPlayer == 0}\n\t<div class=\"checker black\"></div>\n{:else}\n\t<div class=\"checker red\"></div>\n{/if}\n\n<h2 id=\"moves\">Moves: {numMoves}</h2>\n\n{#if screenWidth > 800}\n\t<h2 id=\"time\">Timer: {timer}</h2>\n{/if}\n\n<div id=\"board\">\n\t<svg id=\"hover\">\n\t\t{#each squares as i}\n\t\t\t{#each squares as j}\n\t\t\t\t{#if !gameBoard.isEmpty(i, j)}\n\t\t\t\t\t<rect width=\"100\" height=\"100\" style=\"fill:brown;\" x=\"{j * squareSize}\" y=\"{i * squareSize}\"/>\n\t\t\t\t\t{#if $cirPos[gameBoard.getId(i, j)].s == 0}\n\t\t\t\t\t\t<circle class=\"checkBlack\" id=\"{gameBoard.getId(i, j)}\" on:click=\"{() => setCurrPos(i, j, event)}\" cx=\"{$cirPos[gameBoard.getId(i, j)].y}\" cy=\"{$cirPos[gameBoard.getId(i, j)].x}\" r=\"{$size}\" stroke=\"white\" stroke-width=\"{gameBoard.getPiece(i,j).stack * 2}\" fill=\"black\" />\n\t\t\t\t\t{:else if $cirPos[gameBoard.getId(i, j)].s == 1}\n\t\t\t\t\t\t<circle class=\"checkRed\" id=\"{gameBoard.getId(i, j)}\" on:click=\"{() => setCurrPos(i, j, event)}\" cx=\"{$cirPos[gameBoard.getId(i, j)].y}\" cy=\"{$cirPos[gameBoard.getId(i, j)].x}\" r=\"{$size}\" stroke=\"white\" stroke-width=\"{gameBoard.getPiece(i,j).stack * 2}\" fill=\"red\" />\t\t\t\t\t\n\t\t\t\t\t{/if}\n\t\t\t\t{:else if gameBoard.isEmpty(i, j)}\n\t\t\t\t\t{#if (i % 2 != 0 && j % 2 == 0) || (i % 2 == 0 && j % 2 != 0)}\n\t\t\t\t\t\t<rect on:click=\"{() => setNextPos(i, j)}\" width=\"100\" height=\"100\" style=\"fill:brown;\" x=\"{j * squareSize}\" y=\"{i * squareSize}\"/>\n\t\t\t\t\t{:else}\n\t\t\t\t\t\t<rect width=\"100\" height=\"100\" style=\"fill:wheat;\" x=\"{j * squareSize}\" y=\"{i * squareSize}\"/>\n\t\t\t\t\t{/if}\n\t\t\t\t{/if}\n\t\t\t{/each}\n\t\t{/each}\n\t\t<use id=\"use\" xlink:href=\"#24\" />\n\t<svg>\n</div>\n\n{#if screenWidth <= 800}\n\t<h1 id=\"time\">Timer: {timer}</h1>\n{/if}\n\n<div id=\"state\">\n\t<label>\n\t\t<h2 id=\"rangeBar\">Game State at Move: {rangeMoves}</h2>\n\t\t<input class=\"custom-range\" on:change=\"{viewBoardHistory}\" bind:value={rangeMoves} type=\"range\" min=\"0\" max=\"{numMoves}\" step=\"1\">\n\t</label>\n</div>\n\n<style>\n\t#board {\n\t\twidth:800px;\n\t\theight:var(--board-height);\n\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n\t\tbottom:5px;\n\t\tposition:fixed;\n\t}\n\n\t#hover { \n\t\twidth: 100%; \n\t\theight: 100%; \n\t\tbackground-color: blue;\n\t}\n\n\tcircle {\n\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n\t}\n\n\t.checker {\n\t\tborder-radius:50%;\n\t\theight:40px;\n\t\twidth:40px;\n\t\tfloat:left;\n\t\tmargin-left:10px;\n\t\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n\t}\n\n\t.black {\n\t\tbackground-color: black;\n\t}\n\n\t.red {\n\t\tbackground-color: red;\n\t}\n\t\n\t#player {\n\t\tfloat:left;\n\t}\n\n\t#moves {\n\t\tmargin-left:50px;\n\t\tfloat:left;\n\t}\n\n\t#time {\n\t\tmargin-left:80px;\n\t\tfloat:left;\n\t}\n\n\t#state {\n\t\tfloat:left;\n\t\twidth:400px;\n\t\tmargin-left:80px;\n\t}\n\n\t#rangeBar {\n\t\tfont-size:20px;\n\t\twidth:100%;\n\t}\n\n\t.custom-range {\n\t\twidth:100%;\n\t}\n\n\t@media screen and (max-width: 800px) {\n\n\t\t#state {\n\t\t\tfloat:unset;\n\t\t\twidth:100%;\n\t\t\ttext-align: center;\n\t\t\tmargin-top:20px;\n\t\t\tmargin-left:unset;\n\t\t\tfloat:unset;\n\t\t}\n        \n        #board {\n\t\t\twidth:100%;\n\t\t\tbottom:unset;\n\t\t\tposition:unset;\n\t\t\tmargin-top:30px;\n\t\t}\n\n\t\t.checker {\n\t\t\theight:25px;\n\t\t\twidth:25px;\n\t\t}\n\n\t\t#player {\n\t\t\tfont-size:20px;\n\t\t}\n\n\t\t#moves {\n\t\t\tmargin-left:unset;\n\t\t\tfont-size:20px;\n\t\t\tfloat:right;\n\t\t}\n\n\t\t#time {\n\t\t\tfloat:unset;\n\t\t\tfont-size:20px;\n\t\t\tmargin-top:20px;\n\t\t\tmargin-left:unset;\n\t\t\ttext-align:center;\n\t\t}\n    }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}