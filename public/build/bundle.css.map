{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport { Position } from './Scripts/Position.js';\n\timport { Board } from './Scripts/Board.js';\n\timport { spring } from 'svelte/motion';\n\timport { writable } from 'svelte/store';\n\n\tlet size = spring(40);\n\n\tlet gameBoard = new Board();\n\n\tconst cirPos = spring([]);\n\n\tlet squares = [0, 1, 2, 3, 4, 5, 6, 7];\n\n\tlet currPos = null, nextPos = null;\n\n\tsetCirclePositions();\n\n\tfunction updateCirclePositions(nextPos) {\n\n\t\tlet a = nextPos.xPos, b = nextPos.yPos;\n\n\t\tlet id = gameBoard.getId(a, b);\n\n\t\tcirPos.update(state => {\n\t\t\tstate[id].x = (a + a + 1) * 50;\n\t\t\tstate[id].y = (b + b + 1) * 50;\n\t\t\treturn state;\n\t\t});\n\t}\n\n\tfunction setCirclePositions() {\n\n\t\tfor(let i = 0; i < 8; i++) {\n\t\t\t\n\t\t\tfor(let j = 0; j < 8; j++) {\n\n\t\t\t\tif(!gameBoard.isEmpty(i, j)) {\n\n\t\t\t\t\tlet id = gameBoard.getId(i, j);\n\n\t\t\t\t\tcirPos.update(state => {\n\t\t\t\t\t\tstate[id] = {};\n\t\t\t\t\t\tstate[id].x = (i + i + 1) * 50;  \n\t\t\t\t\t\tstate[id].y = (j + j + 1) * 50; \n\t\t\t\t\t\tstate[id].s = gameBoard.getSide(i, j) == \"U\" ? 0 : 1;\n\t\t\t\t\t\treturn state; \n\t\t\t\t\t});\n\n\t\t\t\t} \n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setCurrPos(i, j, evt) {\n\t\t//console.log(i + \", \" + j);\n\n\t\tlet newtarget = evt.target;\n\t\tlet topmost = document.getElementById(\"use\");\n\t\ttopmost.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"xlink:href\",\"#\" + newtarget.id);\n\t\t\n\t\tcurrPos = gameBoard.getPiece(i, j);\n\n\t\t//let pos = currPos.getPosition();\n\n\t\t//console.log(pos.xPos + \", \" + pos.yPos);\n\t}\n\n\tfunction setNextPos(i, j) {\n\t\t\n\t\tif(gameBoard.isEmpty(i, j) && currPos != null) {\n\n\t\t\tnextPos = new Position(i, j, 'E');\n\n\t\t\tlet move = gameBoard.doMove(currPos, nextPos);\n\n\t\t\tconsole.log(gameBoard);\n\n\t\t\tgameBoard = gameBoard;\n\n\t\t\tif(move) {\n\t\t\t\tupdateCirclePositions(nextPos);\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n</script>\n\n\n<div id=\"board\">\n<svg>\n\t{#each squares as i}\n\t\t{#each squares as j}\n\t\t\t{#if !gameBoard.isEmpty(i, j)}\n\t\t\t\t<rect width=\"100\" height=\"100\" style=\"fill:brown;\" x=\"{j * 100}\" y=\"{i * 100}\"/>\n\t\t\t\t{#if $cirPos[gameBoard.getId(i, j)].s == 0}\n\t\t\t\t\t<circle id=\"{gameBoard.getId(i, j)}\" class=\"checker\" on:click=\"{() => setCurrPos(i, j, event)}\" cx=\"{$cirPos[gameBoard.getId(i, j)].y}\" cy=\"{$cirPos[gameBoard.getId(i, j)].x}\" r=\"{$size}\" stroke=\"white\" stroke-width=\"3\" fill=\"black\" />\n\t\t\t\t{:else if $cirPos[gameBoard.getId(i, j)].s == 1}\n\t\t\t\t\t<circle id=\"{gameBoard.getId(i, j)}\" class=\"checker\" on:click=\"{() => setCurrPos(i, j, event)}\" cx=\"{$cirPos[gameBoard.getId(i, j)].y}\" cy=\"{$cirPos[gameBoard.getId(i, j)].x}\" r=\"{$size}\" stroke=\"white\" stroke-width=\"3\" fill=\"red\" />\t\t\t\t\t\n\t\t\t\t{/if}\n\t\t\t{:else if gameBoard.isEmpty(i, j)}\n\t\t\t\t{#if (i % 2 != 0 && j % 2 == 0) || (i % 2 == 0 && j % 2 != 0)}\n\t\t\t\t\t<rect on:click=\"{() => setNextPos(i, j)}\" width=\"100\" height=\"100\" style=\"fill:brown;\" x=\"{j * 100}\" y=\"{i * 100}\"/>\n\t\t\t\t{:else}\n\t\t\t\t\t<rect width=\"100\" height=\"100\" style=\"fill:wheat;\" x=\"{j * 100}\" y=\"{i * 100}\"/>\n\t\t\t\t{/if}\n\t\t\t{/if}\n\t\t{/each}\n\t{/each}\n\t<use id=\"use\" xlink:href=\"24\" />\n<svg>\n</div>\n\n<style>\n\t#board {\n\t\twidth:800px;\n\t\theight:880px;\n\t\tposition: absolute;\n\t}\n\n\tsvg { \n\t\twidth: 100%; \n\t\theight: 800px; \n\t\tbackground-color: blue;\n\t}\n\n\trect {\n\t\tz-index: 0;\n\t}\n\n\tcircle {\n\t\tz-index: 3;\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "AAkHC,MAAM,eAAC,CAAC,AACP,MAAM,KAAK,CACX,OAAO,KAAK,CACZ,QAAQ,CAAE,QAAQ,AACnB,CAAC,AAED,GAAG,eAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,gBAAgB,CAAE,IAAI,AACvB,CAAC,AAED,IAAI,eAAC,CAAC,AACL,OAAO,CAAE,CAAC,AACX,CAAC,AAED,MAAM,eAAC,CAAC,AACP,OAAO,CAAE,CAAC,AACX,CAAC"
}